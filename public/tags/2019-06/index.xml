<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019-06 on Allposs博客</title>
    <link>http://blog.allposs.com/tags/2019-06/</link>
    <description>Recent content in 2019-06 on Allposs博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 鄂ICP备15010464号-1</copyright>
    <lastBuildDate>Fri, 14 Jun 2019 14:20:23 +0800</lastBuildDate>
    
	<atom:link href="http://blog.allposs.com/tags/2019-06/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>006-GO语言数据类型</title>
      <link>http://blog.allposs.com/post/golang/006-go%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Fri, 14 Jun 2019 14:20:23 +0800</pubDate>
      
      <guid>http://blog.allposs.com/post/golang/006-go%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;本文接上一篇文章，主要介绍数组（array），切片（slice），字典/映射（map），结构体（struct）这类扩展类的数据类型.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>005-GO语言数据类型</title>
      <link>http://blog.allposs.com/post/golang/005-go%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sat, 08 Jun 2019 10:20:23 +0800</pubDate>
      
      <guid>http://blog.allposs.com/post/golang/005-go%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在Go编程语言中，数据类型用于声明函数和变量。数据类型的出现是为了把数据分成所需内存大小不同的数据，编程的时候需要用大数据的时候才需要申请大内存，就可以充分利用内存。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>004-GO语言编程规范</title>
      <link>http://blog.allposs.com/post/golang/004-go%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</link>
      <pubDate>Tue, 04 Jun 2019 16:20:23 +0800</pubDate>
      
      <guid>http://blog.allposs.com/post/golang/004-go%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这篇文章主要介绍在GO语言编程方面的一些标准与规范。虽然go语言的格式化工具能解决部分的格式问题,但是还有一部分细节内容没有规范。提前遵守规范有助于养成良好的编程风格。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>003-GO语言基础结构</title>
      <link>http://blog.allposs.com/post/golang/003-go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 04 Jun 2019 15:20:23 +0800</pubDate>
      
      <guid>http://blog.allposs.com/post/golang/003-go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在学习GO语言的过程中,了解一下程序的实现结构是必要。而GO语言程序基本上由《程序包》+《引用包》组成的。而程序包又由多个包程序文件(源文件)实现,而程序文件则分为以下几个部分:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;包声明&lt;/li&gt;
&lt;li&gt;引入包&lt;/li&gt;
&lt;li&gt;函数&lt;/li&gt;
&lt;li&gt;变量&lt;/li&gt;
&lt;li&gt;注释&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>