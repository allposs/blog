<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Service on allposs博客</title>
    <link>https://blog.allposs.com/tags/service/</link>
    <description>Recent content in Service on allposs博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 18 May 2023 15:18:02 +0800</lastBuildDate>
    <atom:link href="https://blog.allposs.com/tags/service/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Service资源对象详解</title>
      <link>https://blog.allposs.com/docs/%E8%BD%AF%E4%BB%B6/kubernetes/kubernetes%E5%8E%9F%E7%90%86%E5%90%88%E9%9B%86/001-service%E8%B5%84%E6%BA%90%E5%AF%B9%E8%B1%A1%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 18 May 2023 15:18:02 +0800</pubDate>
      <guid>https://blog.allposs.com/docs/%E8%BD%AF%E4%BB%B6/kubernetes/kubernetes%E5%8E%9F%E7%90%86%E5%90%88%E9%9B%86/001-service%E8%B5%84%E6%BA%90%E5%AF%B9%E8%B1%A1%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;&#xA;&lt;p&gt;Service在&lt;a href=&#34;https://kubernetes.io/zh-cn/docs/tutorials/kubernetes-basics/expose/expose-intro/&#34;&gt;Kubernetes&lt;/a&gt;官方主页是这样描述的：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Kubernetes Pod 是转瞬即逝的。 Pod 实际上拥有 生命周期。 当一个工作 Node 挂掉后, 在 Node 上运行的 Pod 也会消亡。 ReplicaSet 会自动地通过创建新的 Pod 驱动集群回到目标状态，以保证应用程序正常运行。 换一个例子，考虑一个具有3个副本数的用作图像处理的后端程序。这些副本是可替换的; 前端系统不应该关心后端副本，即使 Pod 丢失或重新创建。也就是说，Kubernetes 集群中的每个 Pod (即使是在同一个 Node 上的 Pod )都有一个唯一的 IP 地址，因此需要一种方法自动协调 Pod 之间的变更，以便应用程序保持运行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>kube-proxy组件详解</title>
      <link>https://blog.allposs.com/docs/%E8%BD%AF%E4%BB%B6/kubernetes/kubernetes%E5%8E%9F%E7%90%86%E5%90%88%E9%9B%86/002-kube-proxy%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 18 May 2023 15:00:54 +0800</pubDate>
      <guid>https://blog.allposs.com/docs/%E8%BD%AF%E4%BB%B6/kubernetes/kubernetes%E5%8E%9F%E7%90%86%E5%90%88%E9%9B%86/002-kube-proxy%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;&#xA;&lt;h1 id=&#34;环境&#34;&gt;环境&lt;/h1&gt;&#xA;&lt;h1 id=&#34;正文&#34;&gt;正文&lt;/h1&gt;&#xA;&lt;h2 id=&#34;kube-proxy&#34;&gt;kube-proxy&lt;/h2&gt;&#xA;&lt;p&gt;kube-proxy是Kubernetes的核心组件，部署在每台kubernetes节点上，他是Service对象具体实现者，它通过管理Node主机上相应规则条目从而达到类型服务通讯的效果。kube-proxy两种实现模式，一种是使用iptables，另一种则是使用IPVS，这两种组件都是基于Linux内核名为netfilter的子系统。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
